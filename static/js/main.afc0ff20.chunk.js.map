{"version":3,"sources":["actions.js","shaders/VertexShader.glsl","utils/audio-handler.js","shaders/DefaultFragmentShader.glsl","utils/vector-functions.js","vector-fields.js","objects/VectorField.js","objects/Model.js","camera-configs.js","objects/CameraGroup.js","objects/Scene.js","container.js","App.js","shaders/ray-marching.glsl","serviceWorker.js","index.js"],"names":["audioMesh","geometry","PlaneGeometry","uniforms","vertexShader","VertexShader","fragmentShader","Mesh","ShaderMaterial","transparent","opacity","side","DoubleSide","audioMaterial","zeroMap","position","getConfig","name","x","y","z","radius","pos1","pos2","Math","sqrt","Object","keys","reduce","acc","key","pow","dist","argument","cos","asin","VectorField","this","stepSize","Model","vectorFieldConfig","vectorField","mesh","set","curr","next","flow","material","u_time","value","map","i","angle","PI","sin","CameraGroup","focus","directions","config","positions","direction","number","initialFocus","finalFocus","point","resetFocus","length","Scene","width","height","models","scene","THREE","camera","renderer","antialias","setClearColor","setSize","model","cameraGroup","paused","console","log","getActivePosition","lookAt","up","cameraAnimate","forEach","animate","render","objects","object","add","type","u_resolution","parameters","initMesh","aspect","updateProjectionMatrix","renderScene","initScene","mount","backgroundShader","current","clientWidth","clientHeight","backgroundModel","SphereBufferGeometry","push","loadMeshes","Container","props","useRef","useState","isAnimating","setAnimating","controls","useEffect","frameId","handleResize","window","requestAnimationFrame","stop","cancelAnimationFrame","appendChild","domElement","addEventListener","start","play","removeEventListener","e","className","ref","onClick","App","href","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.afc0ff20.chunk.js","sourcesContent":["import {\n  Audio,\n  AudioListener,\n  AudioAnalyser,\n  DataTexture,\n  LuminanceFormat\n} from 'three'\n\nexport const useActions = (state, dispatch) => {\n  const loadAudio = async (mediaElement, fftSize) => {\n    console.log(mediaElement)\n    let listener = new AudioListener();\n    let audio = new Audio( listener );\n    let analyser = new AudioAnalyser( audio, fftSize )\n    await audio.setMediaElementSource(mediaElement);\n\n    dispatch({\n      type: \"SET_MEDIA\",\n      payload: mediaElement\n    })\n    \n    dispatch({\n      type: \"SET_ANALYSER\",\n      payload: analyser\n    })\n    \n    dispatch({\n      type: \"SET_UNIFORMS\",\n      payload: {\n        tAudioData: {\n          value: new DataTexture(\n            analyser.data,\n            fftSize / 2,\n            1,\n            LuminanceFormat\n          )\n        }\n      }\n    })\n  }\n\n  const animate = () => {\n    state.analyser.getFrequencyData()\n    state.uniforms.tAudioData.value.needsUpdate = true\n  }\n\n  return {\n    loadAudio,\n    animate\n  }\n}\n","export default \"#define GLSLIFY 1\\nvarying vec4 vUv;\\n\\nfloat magnitude(vec3 pos) {\\n  return pow(pow(pos.x, 2.0) + pow(pos.y, 2.0) + pow(pos.z, 2.0), 0.5);\\n}\\nvoid main() {\\n  vUv = vec4(position, 1.0);\\n\\n  vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\\n  gl_Position = projectionMatrix * modelViewPosition;\\n}\\n\"","import {ShaderMaterial, PlaneGeometry, Mesh, DoubleSide} from 'three'\nimport VertexShader from '../shaders/VertexShader.glsl'\nimport FragmentShader from '../shaders/DefaultFragmentShader.glsl'\n\nexport const audioMaterial = ({uniforms = null, vertexShader, fragmentShader}) => {\n  return new ShaderMaterial( {\n    uniforms: uniforms,\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    transparent: true,\n    opacity: 0.5,\n    side: DoubleSide\n  });\n}\n\nexport const audioMesh = ({\n  geometry = new PlaneGeometry(10,10,10),\n  uniforms = null,\n  vertexShader = VertexShader,\n  fragmentShader = FragmentShader\n}) => {\n\n  return new Mesh(\n    geometry,\n    audioMaterial({uniforms: uniforms, vertexShader, fragmentShader})\n  )\n}\n\n\n","export default \"#define GLSLIFY 1\\nuniform sampler2D tAudioData;\\nvarying vec4 vUv;\\nfloat rand(vec2 co){\\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\nvoid main() {\\n  float M_PI = 3.1415926535897932384626433832795;\\n  float f =  texture2D( tAudioData, vUv.xy).g;\\n  float radius = 0.5;\\n\\n  vec3 backgroundColor = vec3(1.0, 0.0 , 0.0);\\n  float red  = min(vUv.y / 4.0, 1.0);\\n  vec3 color = vec3( 0.0, 0.0, 0.0);\\n  float i = step(sin(vUv.x + vUv.y + vUv.z), f) ;\\n  gl_FragColor = vec4( mix(backgroundColor, color, i), 1.0 );\\n  \\n  //gl_FragColor = vec4(vec3(1,0,0), 1.0);\\n  //gl_FragColor.a = f;\\n}\\n\"","export const dist = ({pos1 = {x: 0, y:0, z:0}, pos2 = {x: 0, y:0, z:0}}) => {\n  //console.log(pos1, pos2)\n  return Math.sqrt(\n    Object.keys(pos1).reduce((acc, key) => {\n      return acc + Math.pow(pos1[key] - pos2[key], 2)\n    }, 0)\n  )\n}\n\nexport const zeroMap = (position) => 0\n","import { dist, zeroMap } from './utils/vector-functions'\n\nexport default function getConfig(name) {\n  switch(name) {\n  case \"CIRCLEXY_SINEZ\":\n    return {\n      x: (position) => - position.y,\n      y: (position) => position.x,\n      z: (position) => {\n        let radius = dist({pos1: position})\n        let argument = position.y / radius\n        let externalDerivative = Math.cos(Math.asin(argument)) / (Math.sqrt(1 - Math.pow(argument, 2)))\n        let derivative = externalDerivative * position.x\n\n        return derivative\n      }\n    }\n\n  case \"CIRCLEXZ\":\n    return {\n      x: (position) => position.z,\n      z: (position) => - position.x\n    }\n\n\n  case \"RANDOM\":\n    return {\n      x: (position) => position.x * position.z,\n      y: (position) => - position.z,\n      z: (position) => - position.z\n    }\n\n  case \"LORENZ\":\n    let sigma = 10\n    let beta = 8 / 3\n    let rho = 28\n\n    return {\n      x: (position) => rho * (position.y - position.x),\n      y: (position) => position.x * (rho - position.z) - position.y,\n      z: (position) => position.x * position.y - beta * position.z\n    }\n\n  default:\n    return {\n      x: zeroMap, \n      y: zeroMap, \n      z: zeroMap\n    }\n  }\n}\n\n","import getConfig from '../vector-fields'\nimport { zeroMap } from '../utils/vector-functions'\n\nexport default class VectorField {\n  constructor(name) {\n    // defaults to null vector field\n    const {x = zeroMap, y = zeroMap, z= zeroMap} = getConfig(name)\n    this.x = x\n    this.y = y\n    this.z = z\n  }\n\n  flow ({position, stepSize = 0.01}) {\n    return {\n      x: position.x + this.x(position) * stepSize,\n      y: position.y + this.y(position) * stepSize,\n      z: position.z + this.z(position) * stepSize\n    }\n  }\n}\n","import VertexShader from '../shaders/VertexShader.glsl'\nimport { audioMesh } from '../utils'\nimport VectorField from './VectorField'\n\nexport default class Model {\n  constructor({\n    geometry,\n    name,\n    position = {x:0, y:0, z:0},\n    vertexShader = VertexShader,\n    fragmentShader,\n    vectorFieldConfig\n  }) {\n    this.geometry = geometry\n    this.name = name\n    this.position = position\n    this.vertexShader = vertexShader\n    this.fragmentShader = fragmentShader\n    this.vectorField = new VectorField(vectorFieldConfig)\n  }\n\n  initMesh(uniforms) {\n    let mesh = audioMesh({\n      uniforms,\n      geometry: this.geometry,\n      vertexShader: this.vertexShader,\n      fragmentShader: this.fragmentShader\n    })\n\n    mesh.name = this.name\n    mesh.position.set(\n      this.position.x,\n      this.position.y,\n      this.position.z\n    )\n\n    this.mesh = mesh\n    return mesh\n  }\n\n  animate(stepSize) {\n    let curr = this.mesh.position\n    let next = this.vectorField.flow({position: curr, stepSize})\n    if (this.mesh.material.uniforms != null) {\n      this.mesh.material.uniforms.u_time.value += stepSize\n    }\n    \n\n    this.mesh.position.set(\n      next.x,\n      next.y,\n      next.z\n    )\n  }\n}\n","export default function getConfig(name = '') {\n  switch(name){\n  case \"SQUARE\":\n    return [0, 1, 2, 3].map(i => {\n      let angle = Math.PI * 2 * i / 4\n      return {\n        x: Math.cos(angle),\n        y: Math.sin(angle),\n        z: 0\n      }\n    })\n\n  case \"SQUARE_SUSPENSION\":\n    return [0, 1, 2, 3, 4, 5].map(i => {\n      return {\n        x: i % 3 == 0 ? Math.pow(-1, i % 2) : 0,\n        y: i % 3 == 1 ? Math.pow(-1, i % 2) : 0,\n        z: i % 3 == 2 ? Math.pow(-1, i % 2) : 0\n      }\n    })\n\n    \n  default:\n    return [{\n      x: 0,\n      y: 0,\n      z: 100\n    }]\n  }\n}\n","import getConfig from '../camera-configs'\nimport VectorField from './VectorField'\n\nexport default class CameraGroup {\n  constructor({name, focus = {x: 0, y:0, z:0}, vectorField}, dist = 5) {\n    // defaults to null vector field\n    let directions = getConfig(name)\n    this.config = name\n    this.dist = dist\n    this.positions = directions.map(direction => {\n      return {\n        x: dist * direction.x + focus.x,\n        y: dist * direction.y + focus.y,\n        z: dist * direction.z + focus.z\n      }\n    })\n    this.focus = focus\n    this.number = 0\n    this.vectorField = new VectorField(vectorField)\n\n  }\n\n  flow(stepSize) {\n    let initialFocus = this.focus\n    let finalFocus = this.vectorField.flow({position: initialFocus, stepSize})\n\n    this.positions = this.positions.map(position => {\n      return {\n        x: position.x + finalFocus.x - initialFocus.x,\n        y: position.y + finalFocus.y - initialFocus.y,\n        z: position.z + finalFocus.z - initialFocus.z\n      }\n    })\n\n    this.focus = finalFocus\n  }\n\n  resetFocus(point) {\n    let directions = getConfig(this.config)\n    this.positions = directions.map(direction => {\n      return {\n        x: this.dist * direction.x + point.x,\n        y: this.dist * direction.y + point.y,\n        z: this.dist * direction.z + point.z\n      }\n    })\n    this.focus = point\n  }\n\n  follow(point, vectorField) {\n    this.resetFocus(point)\n    this.vectorField = vectorField\n  }\n  \n  getActivePosition() {\n    return this.positions[this.number]\n  }\n\n  switch(number) {\n    this.number = number\n  }\n\n  next() {\n    this.number = (this.number + 1) % this.positions.length\n  }\n\n  setVectorField(vectorField) {\n    this.vectorField = vectorField\n  }\n}\n","import * as THREE from  'three'\nimport Model from './Model'\nimport VectorField from './VectorField'\nimport CameraGroup from './CameraGroup'\n              \nexport default class Scene {\n  constructor({width, height, models}) {\n    this.scene = new THREE.Scene()\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000)\n    this.renderer = new THREE.WebGLRenderer({ antialias: true })\n    this.renderer.setClearColor('#000000')\n    this.renderer.setSize(width, height)\n    this.models = models.map(model => new Model(model))\n    this.cameraGroup = new CameraGroup({\n      name: \"BASIC\",\n      focus: {x: 10, y: 1, z: 10},\n      vectorField: \"ZERO\"\n    }, 0)\n    this.stepSize = 0.001\n    this.paused = true\n    console.log(this.scene)\n  }\n\n  \n  cameraAnimate(stepSize) {\n    const {x, y, z} = this.cameraGroup.getActivePosition()\n    this.camera.position.z = z\n    this.camera.position.x = x\n    this.camera.position.y = y\n    \n    this.camera.lookAt(\n      this.cameraGroup.focus.x,\n      this.cameraGroup.focus.y,\n      this.cameraGroup.focus.z\n    )\n\n    this.camera.up.set(0, 0, 1)\n    this.cameraGroup.flow(stepSize)\n  }\n\n  renderScene() {\n    this.cameraAnimate()\n    this.models.forEach(model => model.animate(this.stepSize))\n    this.renderer.render(this.scene, this.camera)\n  }\n\n  play() {\n    //this.cameraGroup.switch(3)\n    //this.cameraGroup.follow(\n    //  this.models[0].mesh.position,\n    //  this.models[0].vectorField\n    //)\n  }\n\n  pause() {\n    this.paused = true\n  }\n\n  add(objects) {\n    console.log('adding objects')\n    objects.forEach(object => {\n      this.scene.add(object)\n    })\n  }\n\n  loadMeshes(uniforms) {\n    this.models.forEach(model => {\n      switch (model.geometry.type) {\n      case \"PlaneGeometry\":\n\tuniforms.u_resolution = new THREE.Uniform(new THREE.Vector2(\n\t  model.geometry.parameters.width,\n\t  model.geometry.parameters.height\n\t))\n\n      }\n      console.log(model.geometry.parameters.width)\n      let mesh = model.initMesh(uniforms)\n      this.scene.add(mesh)\n    })\n  }\n  \n  handleResize(width, height) {\n    this.renderer.setSize(width, height)\n    this.camera.aspect = width / height\n    this.camera.updateProjectionMatrix()\n    this.renderScene()\n  }\n}\n","import React, { useRef, useEffect, useState, useContext, useReducer } from 'react'\nimport {SphereBufferGeometry, PlaneGeometry} from 'three'\nimport { useActions } from './actions'\nimport Scene from './objects/Scene'\n\nconst initialState = {\n  loading: true\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n  case \"SET_LOADING\":\n    return {\n      ...state,\n      loading: action.payload\n    }\n  }\n}\n\nconst Container = (props) => {\n  const mount = useRef(null)\n  const [isAnimating, setAnimating] = useState(true)\n  const controls = useRef(null)\n  const {backgroundShader} = props\n  \n  useEffect(() => {\n    let scene = initScene(mount, backgroundShader)\n    let frameId\n    \n    const handleResize = () => {\n      scene.handleResize(mount.current.clientWidth, mount.current.clientHeight)\n    }\n    \n    const animate = () => {\n      scene.renderScene()\n      frameId = window.requestAnimationFrame(animate)\n    }\n\n    const start = () => {\n      if (!frameId) {\n        scene.play()\n        frameId = requestAnimationFrame(animate)\n      }\n    }\n\n    const stop = () => {\n      cancelAnimationFrame(frameId)\n      frameId = null\n    }\n\n    mount.current.appendChild(scene.renderer.domElement)\n    window.addEventListener('resize', handleResize)\n\n    controls.current = { start, stop }\n      \n    return () => {\n      stop()\n      window.removeEventListener('resize', handleResize)\n      //mount.current.removeChild(renderer.domElement)\n\n      //scene.remove(cube)\n      //geometry.dispose()\n      //material.dispose()\n    }\n  }, [])\n\n  useEffect(() => {\n    try {\n      if (isAnimating) {\n        controls.current.start()\n      } else {\n        controls.current.stop()\n      }\n    }\n\n    catch(e){\n      console.log(e)\n    }\n  }, [isAnimating])\n  \n  return <div className=\"three-container\" ref={mount} onClick={() => setAnimating(!isAnimating)} />\n}\n\nconst initScene = (mount, backgroundShader) => {\n  // initate scene\n  let width = mount.current.clientWidth\n  let height = mount.current.clientHeight\n  let models = []\n\n  let backgroundModel = {\n    geometry: new SphereBufferGeometry(100, 102, 160),\n    name: \"background\",\n    fragmentShader: backgroundShader,\n    position: {x: 0, y:0, z: 0}\n  }\n\n  models.push(backgroundModel)\n  \n  let scene = new Scene({\n    width,\n    height,\n    models\n  })\n  \n  scene.loadMeshes({u_time: {value: 0}})\n  \n  return scene\n}\nexport default Container\n","import React from 'react';\nimport './App.css';\nimport ThreeContainer from './container'\nimport 'bulma/css/bulma.css'\n\nimport RayMarching from './shaders/ray-marching.glsl'\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"content \">\n        <section className=\"hero\">\n          <div className=\"hero-body\">\n            <p className=\"title has-text-light\">\n              Antony Della Vecchia\n            </p>\n            <p className=\"subtitle has-text-light\">\n              <a href=\"https://github.com/antonydellavecchia\">github</a>\n            </p>\n            <p className=\"subtitle has-text-light\">\n              Office: Strasse des 17. Juni 136, Room 626\n            </p>\n            <p className=\"subtitle has-text-light\">\n              Email: vecchia@math.tu-berlin.de\n            </p>\n\n          </div>\n          \n        </section>\n\n        <section className=\"section\">\n          <h2 className=\"title has-text-light\">About Me</h2>\n          <p className=\"subtitle has-text-light\">\n            I am a member of <a href=\"https://www.math.tu-berlin.de/fachgebiete_ag_diskalg/fg_diskrete_mathematik_geometrie/v-menue/diskrete_mathematik_geometrie/\">\n                               The Discrete Geometry Group </a>\n            of <a href=\"https://page.math.tu-berlin.de/~joswig/\"> Michael Joswig </a> at the <a href=\"https://www.math.tu-berlin.de/menue/home/\">  Institute of Mathematics of the Technical University in Berlin</a>.\n            I am currently an employee of <a href=\"https://www.mardi4nfdi.de/about/mission\">MaRDI</a> working on serialization and databases for computer algebra.\n          </p>\n          <p className=\"subtitle has-text-light\">I received my MSc from <a href=\"https://www.mcgill.ca/\">McGill University</a> under the supervision of <a href=\"https://www.math.mcgill.ca/~wise/\">Daniel T. Wise</a>. During my MSc I developped software for checking if certain CW complexes whose fundamental groups have a single defining relation have nonpositive sectional curvature. </p>\n          <p className=\"subtitle has-text-light\">\n            I am interested in computational algebra and geometry including their applications.\n          </p>\n        </section>\n        <section className=\"section\">\n          <h2 className=\"title has-text-light\">Software</h2>\n          <p className=\"subtitle has-text-light\"> I am currently contributing to the following software libraries</p>\n          <ul className=\"has-text-light\">\n            <li><a href=\"https://oscar-system.github.io/Oscar.jl/stable/\">OSCAR</a></li>\n            <li><a href=\"https://polymake.org/doku.php\">polymake</a></li>\n          </ul>\n        </section>\n      </div>\n      <ThreeContainer backgroundShader={RayMarching}/>\n    </div>\n  )\n}\n\nexport default App;\n","export default \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\n\\nuniform vec2 u_resolution;\\nuniform vec2 u_mouse;\\nuniform float u_time;\\nvarying vec4 vUv;\\n\\nvec4 quat_from_axis_angle(vec3 axis, float angle)\\n{ \\n  vec4 qr;\\n  float half_angle = (angle * 0.5) * 3.14159 / 180.0;\\n  qr.x = axis.x * sin(half_angle);\\n  qr.y = axis.y * sin(half_angle);\\n  qr.z = axis.z * sin(half_angle);\\n  qr.w = cos(half_angle);\\n  return qr;\\n}\\n\\nvec4 quat_conj(vec4 q)\\n{ \\n  return vec4(-q.x, -q.y, -q.z, q.w); \\n}\\n\\nvec4 quat_mult(vec4 q1, vec4 q2)\\n{ \\n  vec4 qr;\\n  qr.x = (q1.w * q2.x) + (q1.x * q2.w) + (q1.y * q2.z) - (q1.z * q2.y);\\n  qr.y = (q1.w * q2.y) - (q1.x * q2.z) + (q1.y * q2.w) + (q1.z * q2.x);\\n  qr.z = (q1.w * q2.z) + (q1.x * q2.y) - (q1.y * q2.x) + (q1.z * q2.w);\\n  qr.w = (q1.w * q2.w) - (q1.x * q2.x) - (q1.y * q2.y) - (q1.z * q2.z);\\n  return qr;\\n}\\n\\nvec3 rotate_vertex_position(vec3 position, vec3 axis, float angle)\\n{ \\n  vec4 qr = quat_from_axis_angle(axis, angle);\\n  vec4 qr_conj = quat_conj(qr);\\n  vec4 q_pos = vec4(position.x, position.y, position.z, 0);\\n  \\n  vec4 q_tmp = quat_mult(qr, q_pos);\\n  qr = quat_mult(q_tmp, qr_conj);\\n  \\n  return vec3(qr.x, qr.y, qr.z);\\n}\\n\\nfloat polynomial(vec3 normal) {\\n  return pow(normal.x, 3.0) * normal.z - pow(normal.y, 2.0) * pow(normal.x, 2.0) + 3.0 * cos(sqrt(2.0) * u_time) *normal.z * normal.x * pow(normal.y, 2.0) * 10.0 * u_time * sin(1.0);\\n}\\n\\nvoid main() {\\n  vec3 ray_origin = vec3(0.0, 0.0, 1.0);\\n  vec2 uv =  gl_FragCoord.xy / u_resolution.xy;\\n  vec3 P = rotate_vertex_position(normalize(vUv.xyz), vec3(0.0, cos(u_time),sin(u_time)), 10.0 * u_time);\\n  vec3 color = vec3(0.7 * smoothstep(0.0, 0.01, abs(polynomial(P))) + 0.3, 0.3 * smoothstep(0.0, 0.001, abs(polynomial(P))) + 0.7, P.z * P.y * 0.1);\\n  gl_FragColor = vec4(abs(color), 0.3);\\n}\\n\"","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}